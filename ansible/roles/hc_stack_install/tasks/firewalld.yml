---
- name: check firewall-cmd
  command: "which firewall-cmd" # noqa 301
  register: firewalld_check
  ignore_errors: true

- name: Populate service facts
  ansible.builtin.service_facts:

- name: get interface
  command: "/bin/bash -c \"/sbin/ip route | grep '^default' | grep -Po '(?<=dev )(.+?)(?= )'\"" # noqa 301
  register: interface
  when: firewalld_check.rc == 0 and ansible_facts.services['firewalld.service'].state == "running"

- name: firewall-cmd --zone=trusted --change-interface
  command: 'firewall-cmd --zone=trusted --change-interface={{ interface.stdout }}'
  when: firewalld_check.rc == 0 and ansible_facts.services['firewalld.service'].state == "running"

- name: firewall-cmd --set-default-zone=trusted
  command: firewall-cmd --set-default-zone=trusted
  when: firewalld_check.rc == 0 and ansible_facts.services['firewalld.service'].state == "running"

- name: firewall-cmd --complete-reload
  command: firewall-cmd --complete-reload
  when: firewalld_check.rc == 0 and ansible_facts.services['firewalld.service'].state == "running"

- name: firewall-cmd --get-active-zones
  command: firewall-cmd --get-active-zones
  when: firewalld_check.rc == 0 and ansible_facts.services['firewalld.service'].state == "running"

- name: Fix cycle in startup - 1 (Debian)
  when: ansible_os_family == "Debian"
  lineinfile:
    dest: "/etc/systemd/system/multi-user.target.wants/firewalld.service"
    line: 'Before=network-pre.target'
    state: absent

- name: Fix cycle in startup - 2 (Debian)
  when: ansible_os_family == "Debian"
  lineinfile:
    dest: "/etc/systemd/system/multi-user.target.wants/firewalld.service"
    line: 'Wants=network-pre.target'
    state: absent

- name: Fix cycle in startup - 3 (Debian)
  when: ansible_os_family == "Debian"
  lineinfile:
    dest: "/etc/systemd/system/multi-user.target.wants/firewalld.service"
    line: 'After=dbus.service'
    state: absent

- name: Fix cycle in startup - 4 (Debian)
  when: ansible_os_family == "Debian"
  lineinfile:
    dest: "/etc/systemd/system/multi-user.target.wants/firewalld.service"
    line: 'After=polkit.service'
    state: absent

- name: Fix cycle in startup - 5 (Debian)
  when: ansible_os_family == "Debian"
  lineinfile:
    dest: "/etc/systemd/system/multi-user.target.wants/firewalld.service"
    insertafter: 'Description=firewalld - dynamic firewall daemon'
    line: 'After=network.service'
    state: present




