name: "TF Cloud"

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cloud: [ "aws", "gcp", "azure" ]
        os: [ {"name": "ubuntu", "version": "2004", "family": "debian", "ssh_user": "ubuntu"},
              {"name": "centos", "version": "7", "family": "redhat", "ssh_user": "centos"}
        ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Setup Packer
        uses: hashicorp-contrib/setup-packer@v1
        with:
          packer-version: 1.7.4

      - name: Set up GCP Cloud SDK
        if: ${{ matrix.cloud == 'gcp' }}
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Terraform Format
        id: fmt
        run: cd terraform && terraform fmt -check

      - name: Terraform Backend
        shell: bash
        env:
          CLOUD: ${{ matrix.cloud }}
        run: |
          cat > terraform/backend.tf << EOF
          terraform {
            backend "remote" {
              hostname     = "app.terraform.io"
              organization = "bitrock"
              workspaces {
                name = "caravan-baking-${CLOUD}"
              }
            }
          }
          EOF

      - name: Terraform Init
        id: init
        run: cd terraform && terraform init

      - name: Terraform Validate
        id: validate
        run: cd terraform && terraform validate -no-color

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: cd terraform && terraform apply -auto-approve
        env:
          TF_VAR_linux_os: ${{ matrix.os.name }}
          TF_VAR_linux_os_version: ${{ matrix.os.version }}
          TF_VAR_linux_os_family: ${{ matrix.os.family }}
          TF_VAR_ssh_username: ${{ matrix.os.ssh_user }}
          TF_VAR_build_on_aws: ${{ matrix.cloud == 'aws' }}
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          TF_VAR_build_on_azure: ${{ matrix.cloud == 'azure' }}
          TF_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_azure_target_resource_group: 'caravan-admin'
          TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_build_on_google: ${{ matrix.cloud == 'gcp' }}
          TF_VAR_google_project_id: ${{ secrets.GCP_PROJECT_ID }}
